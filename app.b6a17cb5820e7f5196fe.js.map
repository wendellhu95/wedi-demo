{"version":3,"sources":["webpack:///./example/services/state.ts","webpack:///./lib/typing.ts","webpack:///./lib/utils.ts","webpack:///./lib/collection.ts","webpack:///./example/utils/uuid.ts","webpack:///./example/services/todo.ts","webpack:///./lib/decorators.ts","webpack:///./lib/idle.ts","webpack:///./lib/injector.ts","webpack:///./lib/react/context.tsx","webpack:///./lib/react/hooks.tsx","webpack:///./lib/singleton.ts","webpack:///./example/services/router.ts","webpack:///./example/services/store/store.ts","webpack:///./lib/react/decorators.tsx","webpack:///./example/App.tsx","webpack:///./example/TodoItem.tsx","webpack:///./example/Footer.tsx","webpack:///./example/utils/pluralize.ts","webpack:///./example/App.css?0741","webpack:///./example/App.css","webpack:///./example/services/store/store.web.ts","webpack:///./example/main.tsx"],"names":["SHOWING","routerService","nowShowing","ALL_TODOS","updated$","this","router$","subscribe","router","ACTIVE_TODOS","COMPLETED_TODOS","next","setEditing","id","editing","update","console","log","StateService","isIdentifier","thing","$$identifier","ctor","lazyInstantiation","isValueItem","useValue","isFactoryItem","useFactory","dependencyIds","Map","getDependencies","setDependencies","index","optional","meta","push","deps","dependencies","disposed","dep","Array","depKey","depItem","add","key","ensureCollectionNotDisposed","set","has","get","dispose","forEach","value","Error","uuid","i","random","Math","toString","stateService","storeService","Subject","todos","store","filter","todo","completed","length","reduce","acc","activeTodoCount","inform","addTodo","title","concat","toggleAll","checked","map","toggle","todoToToggle","destroy","candidate","save","todoToSave","text","clearCompleted","TodoService","getDecoratorMisUsedError","targetName","identifierName","createIdentifier","name","warn","target","_key","arguments","Need","constructor","runWhenIdle","requestIdleCallback","cancelIdleCallback","runner","timeout","handle","undefined","clearTimeout","Object","freeze","didTimeout","timeRemaining","setTimeout","executor","didRun","err","error","disposeCallback","getValue","recursionCounter","getDependencyKeyName","parent","createChild","Injector","__getDependencyOrIdentifierPair","getOrInit","createAndCacheInstance","invokeDependencyFactory","createInstance","theCtor","sort","a","b","resolvedArgs","args","extraParams","dependency","firstDependencyArgIndex","delta","fill","slice","__putDependencyBack","initPromise","assertRecursionNotTrappedInACircle","IdleValue","doCreateInstance","Proxy","create","obj","prop","bind","_target","factory","dp","call","InjectionContext","injector","displayName","InjectionConsumer","Consumer","InjectionProvider","Provider","renderChild","context","_collection","providers","collection","children","parentInjector","newDependencies","d","render","useDependency","singletonDependencies","registerSingleton","findIndex","getSingletonDependencies","window","addEventListener","e","segment","newURL","split","IStoreService","Provide","items","getChild","props","$$collection","Inject","cannotBeNull","propName","_originDescriptor","component","ensureInjectionContextExists","_value","inputRef","componentDidMount","todoService","pipe","forceUpdate","handleKeydown","keyCode","preventDefault","val","todoItems","shownTodos","todoPart","todoCount","type","className","onChange","htmlFor","footerPart","ref","r","placeholder","onKeyDown","autoFocus","contextType","TodoMVC","App","module","TodoItem","inputValue","setInputValue","handleSubmit","trim","onDoubleClick","current","focus","handleEdit","onClick","onBlur","Footer","count","word","href","selected","completedCount","content","options","transform","locals","exports","namespace","data","localStorage","setItem","JSON","stringify","getItem","parse","LocalStoreService","document","getElementsByClassName"],"mappings":"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","file":"app.b6a17cb5820e7f5196fe.js","sourcesContent":["import { Need } from 'lib/decorators';\nimport { Subject } from 'rxjs';\nimport { RouterService } from './router';\n\nexport enum SHOWING {\n  ALL_TODOS,\n  ACTIVE_TODOS,\n  COMPLETED_TODOS\n}\n\nexport class StateService {\n  nowShowing: SHOWING = SHOWING.ALL_TODOS;\n  editing?: string;\n  updated$ = new Subject<void>();\n\n  constructor(@Need(RouterService) private routerService: RouterService) {\n    this.routerService.router$.subscribe((router) => {\n      this.nowShowing =\n        router === '/active'\n          ? SHOWING.ACTIVE_TODOS\n          : router === '/completed'\n          ? SHOWING.COMPLETED_TODOS\n          : SHOWING.ALL_TODOS;\n      this.updated$.next();\n    });\n  }\n\n  setEditing(id: string): void {\n    this.editing = id;\n    this.update();\n\n    if (!id) {\n      console.log('clear editing');\n    }\n  }\n\n  private update(): void {\n    this.updated$.next();\n  }\n}\n","export type Ctor<T = any> = new (...args: any[]) => T;\n\nexport interface Identifier<T = any> {\n  (...args: any[]): void;\n  type?: T;\n}\n\nexport function isIdentifier(thing: any): thing is Identifier {\n  return thing.$$identifier;\n}\n\nexport interface DependencyMeta<T> {\n  id: DependencyKey<T>;\n  index: number;\n  optional: boolean;\n}\n\nexport class InitPromise<T = any> {\n  readonly ctor: any;\n  readonly lazyInstantiation: boolean;\n  constructor(ctor: Ctor<T>, lazyInstantiation: boolean = false) {\n    this.ctor = ctor;\n    this.lazyInstantiation = lazyInstantiation;\n  }\n}\n\nexport interface ValueItem<T> {\n  useValue: T;\n}\n\nexport function isValueItem(thing: any): thing is ValueItem<any> {\n  return !!(thing as any).useValue;\n}\n\nexport interface FactoryItem {\n  useFactory: Function;\n  deps?: DependencyKey<any>[];\n}\n\nexport function isFactoryItem(thing: any): thing is FactoryItem {\n  return !!(thing as any).useFactory;\n}\n\nexport type IdentifierPair<T> =\n  | Ctor<T>\n  | InitPromise<T>\n  | ValueItem<T>\n  | FactoryItem;\n\nexport type DependencyKey<T> = Identifier<T> | Ctor<T>;\n\nexport type DependencyItem<T> = [Identifier<T>, IdentifierPair<T>] | Ctor<T>;\n\nexport interface IDisposable {\n  dispose(): void;\n}\n","import { Ctor, DependencyKey, DependencyMeta, Identifier } from './typing';\n\nexport const dependencyIds = new Map<string, Identifier<any>>();\nexport const DEPENDENCIES = '$$WEDI_DEPENDENCIES';\nexport const TARGET = '$$WEDI_TARGET';\n\nexport function getDependencies<T>(ctor: Ctor<T>): DependencyMeta<T>[] {\n  return (ctor as any)[DEPENDENCIES] || [];\n}\n\nexport function setDependencies<T>(\n  ctor: Ctor<any>,\n  id: DependencyKey<T>,\n  index: number,\n  optional: boolean\n) {\n  const meta: DependencyMeta<T> = { id, index, optional };\n\n  // Cope with dependency that is inherited from another.\n  if ((ctor as any)[TARGET] === ctor) {\n    (ctor as any)[DEPENDENCIES].push(meta);\n  } else {\n    (ctor as any)[DEPENDENCIES] = [meta];\n    (ctor as any)[TARGET] = ctor;\n  }\n}\n","import {\n  DependencyItem,\n  DependencyKey,\n  IDisposable,\n  InitPromise\n} from './typing';\n\nexport class DependencyCollection implements IDisposable {\n  private readonly dependencies = new Map<DependencyKey<any>, any>();\n  private disposed: boolean = false;\n\n  constructor(deps: DependencyItem<any>[] = []) {\n    for (const dep of deps) {\n      if (dep instanceof Array) {\n        const [depKey, depItem] = dep;\n        this.add(depKey, depItem);\n      } else {\n        this.add(dep, new InitPromise(dep));\n      }\n    }\n  }\n\n  /* Register a dependency with an identifier. */\n  add<T>(key: DependencyKey<T>, depItem: any): void {\n    this.ensureCollectionNotDisposed();\n    this.dependencies.set(key, depItem);\n  }\n\n  has(key: DependencyKey<any>): boolean {\n    this.ensureCollectionNotDisposed();\n    return this.dependencies.has(key);\n  }\n\n  get<T>(key: DependencyKey<T>): T | InitPromise<T> {\n    this.ensureCollectionNotDisposed();\n    return this.dependencies.get(key);\n  }\n\n  /**\n   * If this collection get disposed\n   */\n  dispose(): void {\n    if (!this.disposed) {\n      this.dependencies.forEach((value, key) => {\n        if (value.dispose) {\n          value.dispose();\n        }\n      });\n    }\n    this.disposed = true;\n  }\n\n  private ensureCollectionNotDisposed(): void {\n    if (this.disposed) {\n      throw new Error(\n        `[WeDI] Dependency collection is not accessible after it disposes!`\n      );\n    }\n  }\n}\n","export function uuid(): string {\n  /*jshint bitwise:false */\n  let i;\n  let random;\n  let uuid = '';\n\n  for (i = 0; i < 32; i++) {\n    random = (Math.random() * 16) | 0;\n    if (i === 8 || i === 12 || i === 16 || i === 20) {\n      uuid += '-';\n    }\n    uuid += (i === 12 ? 4 : i === 16 ? (random & 3) | 8 : random).toString(16);\n  }\n\n  return uuid;\n}\n","import { Need } from 'lib/decorators';\nimport { Subject } from 'rxjs';\n\nimport { uuid } from 'example/utils/uuid';\n\nimport { SHOWING, StateService } from './state';\nimport { IStoreService } from './store/store';\n\nexport interface ITodo {\n  id: string;\n  title: string;\n  completed: boolean;\n}\n\n/**\n * Storing all todo items, and provide methods to manipulate them.\n */\nexport class TodoService {\n  todos: ITodo[];\n  updated$ = new Subject<void>();\n\n  get shownTodos(): ITodo[] {\n    return this.todos.filter((todo) => {\n      switch (this.stateService.nowShowing) {\n        case SHOWING.ACTIVE_TODOS:\n          return !todo.completed;\n        case SHOWING.COMPLETED_TODOS:\n          return todo.completed;\n        default:\n          return true;\n      }\n    });\n  }\n\n  get todoCount(): number {\n    return this.todos.length;\n  }\n\n  get activeTodoCount(): number {\n    return this.todos.reduce(\n      (acc, todo) => (todo.completed ? acc : acc + 1),\n      0\n    );\n  }\n\n  get completedCount(): number {\n    return this.todos.length - this.activeTodoCount;\n  }\n\n  constructor(\n    @Need(StateService) private stateService: StateService,\n    @IStoreService private storeService: IStoreService\n  ) {\n    this.todos = this.storeService.store('TODO');\n  }\n\n  inform() {\n    this.storeService.store('TODO', this.todos);\n    this.updated$.next();\n  }\n\n  addTodo(title: string): void {\n    this.todos = this.todos.concat({\n      id: uuid(),\n      title: title,\n      completed: false\n    });\n\n    this.inform();\n  }\n\n  toggleAll(checked: boolean): void {\n    this.todos = this.todos.map<ITodo>((todo: ITodo) => ({\n      ...todo,\n      completed: checked\n    }));\n\n    this.inform();\n  }\n\n  toggle(todoToToggle: ITodo) {\n    this.todos = this.todos.map<ITodo>((todo: ITodo) => {\n      return todo !== todoToToggle\n        ? todo\n        : { ...todo, completed: !todo.completed };\n    });\n\n    this.inform();\n  }\n\n  destroy(todo: ITodo) {\n    this.todos = this.todos.filter((candidate) => candidate !== todo);\n\n    this.inform();\n  }\n\n  save(todoToSave: ITodo, text: string) {\n    this.todos = this.todos.map((todo) =>\n      todo !== todoToSave ? todo : { ...todo, title: text }\n    );\n\n    this.inform();\n  }\n\n  clearCompleted() {\n    this.todos = this.todos.filter((todo) => !todo.completed);\n\n    this.inform();\n  }\n}\n","import { Ctor, DependencyKey, Identifier } from 'lib/typing';\nimport * as DIUtils from 'lib/utils';\n\nfunction getDecoratorMisUsedError(\n  targetName: string,\n  identifierName: string\n): Error {\n  return new Error(\n    '[WeDI] dependency identifier can only be decorated on a constructor parameter. ' +\n      `Check ${identifierName} decorated on ${targetName}.`\n  );\n}\n\nexport function createIdentifier<T>(name: string): Identifier<T> {\n  if (DIUtils.dependencyIds.has(name)) {\n    console.warn(`[DI] duplicated identifier name ${name}.`);\n\n    return DIUtils.dependencyIds.get(name)!;\n  }\n\n  const id = function(target: Ctor<T>, _key: string, index: number): void {\n    if (arguments.length !== 3) {\n      throw getDecoratorMisUsedError(target.name, name);\n    }\n\n    DIUtils.setDependencies(target, id, index, false);\n  } as any;\n\n  id.toString = () => name;\n  id.$$identifier = true;\n\n  DIUtils.dependencyIds.set(name, id);\n\n  return id;\n}\n\n/**\n * Wrap a Identifier with this function to make it optional.\n */\nexport function Optional<T>(identifier: DependencyKey<T>) {\n  return function(target: Ctor<T>, _key: string, index: number) {\n    if (arguments.length !== 3) {\n      throw getDecoratorMisUsedError(target.name, identifier.toString());\n    }\n\n    DIUtils.setDependencies(target, identifier, index, true);\n  };\n}\n\n/**\n * Used inside constructor for services to claim dependencies.\n */\nexport function Need<T>(key: DependencyKey<T>) {\n  return function<C>(target: Ctor<C>, _key: string, index: number) {\n    if (arguments.length !== 3) {\n      throw getDecoratorMisUsedError(target.name, key.constructor.name);\n    }\n\n    DIUtils.setDependencies(target, key, index, false);\n  };\n}\n","export interface IdleDeadline {\n  readonly didTimeout: boolean;\n  timeRemaining(): DOMHighResTimeStamp;\n}\n\nexport type DisposableCallback = () => void;\n\n/**\n * This run the callback when CPU is idle. Will fallback to setTimeout if\n * the browser doesn't support requestIdleCallback.\n */\nexport let runWhenIdle: (\n  callback: (idle?: IdleDeadline) => void,\n  timeout?: number\n) => DisposableCallback;\n\n// Declare global variables because apparently the type file doesn't have it, for now.\ndeclare function requestIdleCallback(\n  callback: (args: IdleDeadline) => void,\n  options?: { timeout: number }\n): number;\ndeclare function cancelIdleCallback(handle: number): void;\n\n// Use an IIFE to set up runWhenIdle\n(function() {\n  if (\n    typeof requestIdleCallback !== 'undefined' &&\n    typeof cancelIdleCallback !== 'undefined'\n  ) {\n    // Use native requestIdleCallback.\n    runWhenIdle = (runner, timeout?) => {\n      const handle: number = requestIdleCallback(\n        runner,\n        typeof timeout === 'number' ? { timeout } : undefined\n      );\n      let disposed = false;\n      return () => {\n        if (disposed) {\n          return;\n        }\n        disposed = true;\n        clearTimeout(handle);\n      };\n    };\n  } else {\n    // Use setTimeout as hack.\n    const dummyIdle: IdleDeadline = Object.freeze({\n      didTimeout: true,\n      timeRemaining() {\n        return 15;\n      }\n    });\n    runWhenIdle = (runner) => {\n      const handle = setTimeout(() => runner(dummyIdle));\n      let disposed = false;\n      return () => {\n        if (disposed) {\n          return;\n        }\n        disposed = true;\n        clearTimeout(handle);\n      };\n    };\n  }\n})();\n\n/**x\n * A wrapper of a executor so it can be evaluated when it's necessary or the CPU is idle.\n *\n * The type of the returned value of the executor would be T.\n */\nexport class IdleValue<T> {\n  private readonly executor: () => void;\n  private value?: T;\n\n  private didRun: boolean = false;\n  private error?: Error;\n  private readonly disposeCallback: () => void;\n\n  constructor(executor: () => T) {\n    this.executor = () => {\n      try {\n        this.value = executor();\n      } catch (err) {\n        this.error = err;\n      } finally {\n        this.didRun = true;\n      }\n    };\n    this.disposeCallback = runWhenIdle(() => this.executor());\n  }\n\n  dispose(): void {\n    this.disposeCallback();\n  }\n\n  getValue(): T {\n    if (!this.didRun) {\n      this.dispose();\n      this.executor();\n    }\n    if (this.error) {\n      throw this.error;\n    }\n    return this.value!;\n  }\n}\n","import { DependencyCollection } from './collection';\nimport { IdleValue } from './idle';\nimport {\n  Ctor,\n  DependencyKey,\n  FactoryItem,\n  IdentifierPair,\n  IDisposable,\n  InitPromise,\n  isFactoryItem,\n  isIdentifier,\n  isValueItem\n} from './typing';\nimport * as DIUtils from './utils';\n\nlet recursionCounter = 0;\n\nfunction getDependencyKeyName(key: DependencyKey<any>): string {\n  return isIdentifier(key) ? key.toString() : key.name;\n}\n\nexport class Injector implements IDisposable {\n  private readonly parent?: Injector;\n  private readonly dependencies: DependencyCollection;\n\n  constructor(dependencies: DependencyCollection, parent?: Injector) {\n    this.dependencies = dependencies;\n    this.parent = parent;\n  }\n\n  dispose(): void {\n    this.dependencies.dispose();\n  }\n\n  /**\n   * Create a child Initializer to build layered injection system.\n   */\n  createChild(\n    dependencies: DependencyCollection = new DependencyCollection()\n  ): Injector {\n    return new Injector(dependencies, this);\n  }\n\n  /**\n   * Get a dependency.\n   */\n  get<T>(id: DependencyKey<T>): T | null {\n    const thing = this.__getDependencyOrIdentifierPair(id);\n\n    if (thing instanceof InitPromise || isFactoryItem(thing)) {\n      // Not initialized yet.\n      return null;\n    } else {\n      return this.getOrInit(id);\n    }\n  }\n\n  /**\n   * Get a dependency or create one in the current injector.\n   */\n  getOrInit<T>(id: DependencyKey<T>): T | null {\n    const thing = this.__getDependencyOrIdentifierPair(id);\n\n    if (typeof thing === 'undefined') {\n      return null;\n    } else if (thing instanceof InitPromise) {\n      return this.createAndCacheInstance(id, thing);\n    } else if (isValueItem(thing)) {\n      return thing.useValue;\n    } else if (isFactoryItem(thing)) {\n      return this.invokeDependencyFactory(id, thing);\n    } else {\n      return thing as T;\n    }\n  }\n\n  /**\n   * Initialize a class in the scope of the injector.\n   * @param ctor The class to be initialized.\n   */\n  createInstance<T>(ctor: Ctor<T> | InitPromise<T>, ...extraParams: any[]): T {\n    const theCtor = ctor instanceof InitPromise ? ctor.ctor : ctor;\n    const dependencies = DIUtils.getDependencies(theCtor).sort(\n      (a, b) => a.index - b.index\n    );\n    const resolvedArgs: any[] = [];\n\n    let args = [...extraParams];\n\n    for (const dependency of dependencies) {\n      const thing = this.getOrInit(dependency.id);\n\n      if (thing === null && !dependency.optional) {\n        throw new Error(\n          `[WeDI] ${\n            theCtor.name\n          } relies on an not provided dependency \"${getDependencyKeyName(\n            dependency.id\n          )}\".`\n        );\n      }\n\n      resolvedArgs.push(thing);\n    }\n\n    const firstDependencyArgIndex =\n      dependencies.length > 0 ? dependencies[0].index : args.length;\n\n    if (args.length !== firstDependencyArgIndex) {\n      console.warn(\n        `[DI] expected ${firstDependencyArgIndex} non-injected parameters ` +\n          `but ${args.length} parameters are provided.`\n      );\n\n      const delta = firstDependencyArgIndex - args.length;\n      if (delta > 0) {\n        args = [...args, ...new Array(delta).fill(undefined)];\n      } else {\n        args = args.slice(0, firstDependencyArgIndex);\n      }\n    }\n\n    return new theCtor(...args, ...resolvedArgs);\n  }\n\n  __getDependencyOrIdentifierPair<T>(\n    id: DependencyKey<T>\n  ): T | IdentifierPair<T> | undefined {\n    return (\n      this.dependencies.get(id) ||\n      (this.parent\n        ? this.parent.__getDependencyOrIdentifierPair(id)\n        : undefined)\n    );\n  }\n\n  __putDependencyBack<T>(key: DependencyKey<T>, value: T): void {\n    if (this.dependencies.get(key)) {\n      this.dependencies.add(key, value);\n    } else if (this.parent) {\n      this.parent.__putDependencyBack(key, value);\n    } else {\n      throw new Error(\n        `[WeDI] cannot find a place to to the new created ${getDependencyKeyName(\n          key\n        )}.`\n      );\n    }\n  }\n\n  private createAndCacheInstance<T>(\n    id: DependencyKey<T>,\n    initPromise: InitPromise<T>\n  ) {\n    recursionCounter += 1;\n\n    this.assertRecursionNotTrappedInACircle();\n\n    const ctor = initPromise.ctor;\n    let thing: T;\n\n    if (initPromise.lazyInstantiation) {\n      const idle = new IdleValue<T>(() => this.doCreateInstance(id, ctor));\n      thing = new Proxy(Object.create(null), {\n        get(target: any, key: string | number | symbol): any {\n          if (key in target) {\n            return target[key];\n          }\n          const obj = idle.getValue();\n          let prop = (obj as any)[key];\n          if (typeof prop !== 'function') {\n            return prop;\n          }\n          prop = prop.bind(obj);\n          target[key] = prop;\n          return prop;\n        },\n        set(_target: any, key: string | number | symbol, value: any): boolean {\n          (idle.getValue() as any)[key] = value;\n          return true;\n        }\n      }) as T;\n    } else {\n      thing = this.doCreateInstance(id, ctor);\n    }\n\n    recursionCounter -= 1;\n\n    return thing;\n  }\n\n  private doCreateInstance<T>(id: DependencyKey<T>, ctor: Ctor<T>): T {\n    const thing = this.createInstance(ctor);\n    this.__putDependencyBack(id, thing);\n    return thing;\n  }\n\n  private assertRecursionNotTrappedInACircle(): void {\n    if (recursionCounter > 100) {\n      throw new Error(\n        '[WeDI] \"_createInstance\" exceeds the limitation of recursion. There might be a circular dependency.\"'\n      );\n    }\n  }\n\n  private invokeDependencyFactory<T>(\n    id: DependencyKey<T>,\n    factory: FactoryItem\n  ): T {\n    const dependencies = factory.deps?.map((dp) => this.getOrInit(dp)) || [];\n    const thing = factory.useFactory.call(null, dependencies);\n\n    this.dependencies.add(id, thing);\n\n    return thing;\n  }\n}\n","import React, { Component, createContext } from 'react';\n\nimport { DependencyCollection } from 'lib/collection';\nimport { Injector } from 'lib/injector';\nimport { getSingletonDependencies } from 'lib/singleton';\nimport { Identifier } from 'lib/typing';\n\nexport interface InjectionContextProps {\n  injector: Injector | null;\n}\n\nexport const InjectionContext = createContext<InjectionContextProps>({\n  injector: null\n});\nInjectionContext.displayName = 'context';\n\nexport const InjectionConsumer = InjectionContext.Consumer;\nexport const InjectionProvider = InjectionContext.Provider;\n\nexport interface InjectionProviderProps {\n  providers?: [Identifier<any>, any][];\n  collection?: DependencyCollection;\n}\n\n/**\n * The React binding of WeDI use the React context API to specify\n * injection positions and layered injector three.\n *\n * ```ts\n * <InjectorLayer providers={}>\n *   { children }\n * </InjectorLayer>\n * ```\n */\nexport class InjectionLayer extends Component<InjectionProviderProps> {\n  renderChild(context: InjectionContextProps) {\n    const { providers, collection, children } = this.props;\n    const parentInjector = context.injector;\n    const newDependencies = providers || [];\n\n    // NOTE: In the root injector we should gather singleton dependencies.\n    // TODO: this do not works for function component.\n    if (!context.injector) {\n      newDependencies.push(...getSingletonDependencies());\n    }\n\n    if (collection && providers) {\n      console.warn(\n        '[WeDI] you provide both \"providers\" and \"collections\", \"providers\" will be ignored.'\n      );\n    }\n\n    let _collection: DependencyCollection;\n    if (collection) {\n      newDependencies.forEach((d) => collection.add(d[0], d[1]));\n      _collection = collection;\n    } else {\n      _collection = new DependencyCollection(newDependencies);\n    }\n\n    const injector = parentInjector\n      ? parentInjector.createChild(_collection)\n      : new Injector(_collection);\n\n    return (\n      <InjectionProvider value={{ injector }}>{children}</InjectionProvider>\n    );\n  }\n\n  render() {\n    return (\n      <InjectionConsumer>\n        {(context) => this.renderChild(context)}\n      </InjectionConsumer>\n    );\n  }\n}\n","import { useContext, useMemo } from 'react';\n\nimport { DependencyItem, DependencyKey } from 'lib/typing';\nimport { DependencyCollection } from '../collection';\nimport { InjectionContext } from './context';\n\n/**\n * When providing dependencies in a functional component, it would be expensive\n * (not to mention logic incorrectness)\n */\nexport function useCollection(\n  entries: DependencyItem<any>[]\n): DependencyCollection {\n  const memorizedCollection = useMemo(() => {\n    return new DependencyCollection(entries);\n  }, [entries]);\n\n  return memorizedCollection;\n}\n\n/**\n * This function support using dependency injection in a function component\n * with the help of React Hooks.\n */\nexport function useDependency<T>(id: DependencyKey<T>): T | null {\n  const { injector } = useContext(InjectionContext);\n  const thing = injector && injector.getOrInit(id);\n\n  return thing || null;\n}\n","import { Ctor, Identifier, InitPromise } from './typing';\n\nconst singletonDependencies: [Identifier<any>, InitPromise<any>][] = [];\n\nexport function registerSingleton<T>(id: Identifier<T>, ctor: Ctor<T>): void {\n  const index = singletonDependencies.findIndex(\n    (d) => d.toString() === id.toString()\n  );\n\n  if (index !== -1) {\n    singletonDependencies[index] = [id, new InitPromise<T>(ctor)];\n    console.warn(`[WeDI] Duplicated registration of ${id.toString()}.`);\n  } else {\n    singletonDependencies.push([id, new InitPromise<T>(ctor)]);\n  }\n}\n\n/**\n * For top-layer injectors to fetch all singleton dependencies.\n */\nexport function getSingletonDependencies(): [\n  Identifier<any>,\n  InitPromise<any>\n][] {\n  return singletonDependencies;\n}\n","import { Subject } from 'rxjs';\n\nexport class RouterService {\n  router$ = new Subject<string>();\n\n  constructor() {\n    window.addEventListener('hashchange', (e) => {\n      const url = e.newURL;\n      const segment = url.split('#')[1] || '/';\n\n      this.router$.next(segment);\n    });\n  }\n}\n","import { createIdentifier } from 'lib/decorators';\n\nexport interface IStoreService {\n  store(namespace: string): any;\n  store(namespace: string, data: any): void;\n}\n\nexport const IStoreService = createIdentifier<IStoreService>('store');\n","import React, { Component, createElement } from 'react';\n\nimport { DependencyCollection } from 'lib/collection';\nimport { Injector } from 'lib/injector';\nimport { Ctor, DependencyItem, Identifier } from 'lib/typing';\nimport { InjectionLayer } from './context';\n\n/**\n * An decorator that could be used on a React class component. To provide a\n * injection context on that component.\n */\nexport function Provide(items: DependencyItem<any>[]) {\n  return function(target: any): any {\n    function getChild(this: Component) {\n      return createElement(target, this.props);\n    }\n\n    return class extends Component<any, any> {\n      $$collection: DependencyCollection;\n\n      constructor(props: any, context: any) {\n        super(props, context);\n        this.$$collection = new DependencyCollection(items);\n      }\n\n      render() {\n        return (\n          <InjectionLayer collection={this.$$collection}>\n            {getChild.call(this)}\n          </InjectionLayer>\n        );\n      }\n    };\n  };\n}\n\n/**\n * Returns decorator that could be used on a property of\n * a React class component to inject a dependency.\n */\nexport function Inject<T>(\n  id: Identifier<T> | Ctor<T>,\n  cannotBeNull: boolean = false\n) {\n  return function(target: any, propName: string, _originDescriptor?: any): any {\n    const descriptor = {\n      // When user is trying to get the service, get it from the injector in\n      // the current context.\n      get(): T | null {\n        // tslint:disable-next-line:no-invalid-this\n        const thisAsComponent: Component<any> = this as any;\n\n        ensureInjectionContextExists(thisAsComponent);\n\n        const injector: Injector = thisAsComponent.context.injector;\n        const thing = injector && injector.getOrInit(id);\n\n        if (cannotBeNull && !thing) {\n          throw Error(`[WeDI] Cannot get an instance of ${id.toString()}!`);\n        }\n\n        return thing || null;\n      },\n      set(_value: never) {\n        throw Error(\n          `[WeDI] You can never set value to a dependency. Check \"${propName}\" of \"${target.constructor.name}\".`\n        );\n      }\n    };\n\n    return descriptor;\n  };\n}\n\nfunction ensureInjectionContextExists(component: Component<any>): void {\n  if (!component.context || !component.context.injector) {\n    throw Error(\n      `You should make \"InjectorContext\" as ${component.constructor.name}'s default context type. ` +\n        'If you want to use multiple context, please check this page on React documentation. ' +\n        'https://github.com/ant-design/ant-design'\n    );\n  }\n}\n","import React, { Component, KeyboardEvent } from 'react';\nimport { hot } from 'react-hot-loader';\nimport { merge } from 'rxjs';\nimport { debounceTime } from 'rxjs/operators';\n\nimport './App.css';\n\nimport { InjectionContext } from 'lib/react/context';\nimport { Inject, Provide } from 'lib/react/decorators';\n\nimport { Footer } from './Footer';\nimport { RouterService } from './services/router';\nimport { StateService } from './services/state';\nimport { TodoService } from './services/todo';\nimport { TodoItem } from './TodoItem';\n\n@Provide([TodoService, StateService, RouterService])\nclass TodoMVC extends Component {\n  static contextType = InjectionContext;\n\n  @Inject(StateService) private stateService!: StateService;\n  @Inject(TodoService) private todoService!: TodoService;\n\n  inputRef: HTMLInputElement | null = null;\n\n  componentDidMount(): void {\n    merge(this.todoService.updated$, this.stateService.updated$)\n      .pipe(debounceTime(16))\n      .subscribe(() => this.forceUpdate());\n  }\n\n  private handleKeydown(e: KeyboardEvent): void {\n    if (e.keyCode !== 13) {\n      return;\n    }\n\n    e.preventDefault();\n\n    const val = this.inputRef?.value;\n\n    console.log(val);\n\n    if (val) {\n      this.todoService.addTodo(val);\n      this.inputRef!.value = '';\n    }\n  }\n\n  render() {\n    const todoItems = this.todoService.shownTodos.map((todo) => {\n      return <TodoItem key={todo.id} todo={todo}></TodoItem>;\n    });\n\n    const todoPart = this.todoService.todoCount ? (\n      <section>\n        <input\n          type=\"checkbox\"\n          id=\"toggle-all\"\n          className=\"toggle-all\"\n          onChange={(e) => this.todoService.toggleAll(e.target.checked)}\n          checked={this.todoService.activeTodoCount === 0}\n        />\n        <label htmlFor=\"toggle-all\">Mark all as completed</label>\n        <ul className=\"todo-list\">{todoItems}</ul>\n      </section>\n    ) : null;\n    const footerPart = this.todoService.todoCount ? <Footer></Footer> : null;\n\n    return (\n      <div>\n        <header className=\"header\">\n          <h1>todos</h1>\n          <input\n            type=\"text\"\n            ref={(r) => (this.inputRef = r)}\n            className=\"new-todo\"\n            placeholder=\"What needs to be done?\"\n            onKeyDown={(e) => this.handleKeydown(e)}\n            autoFocus={true}\n          />\n        </header>\n        {todoPart}\n        {footerPart}\n      </div>\n    );\n  }\n}\n\nexport const App = hot(module)(() => <TodoMVC />);\n","import classNames from 'classnames';\nimport React, { FormEvent, KeyboardEvent, useRef, useState } from 'react';\n\nimport { useDependency } from 'lib/react/hooks';\n\nimport { StateService } from './services/state';\nimport { ITodo, TodoService } from './services/todo';\n\nexport interface ITodoItemProps {\n  key: string;\n  todo: ITodo;\n  onEdit?(todo: ITodo): void;\n  onSave?(todo: ITodo): void;\n  onCancel?(): void;\n}\n\nexport function TodoItem(props: ITodoItemProps) {\n  const { todo } = props;\n\n  const [inputValue, setInputValue] = useState(todo.title);\n  const inputRef = useRef<HTMLInputElement>(null);\n  const todoService = useDependency(TodoService);\n  const stateService = useDependency(StateService);\n\n  const handleEdit = function() {\n    setInputValue(todo.title);\n\n    stateService?.setEditing(todo.id);\n\n    setTimeout(() => inputRef?.current!.focus(), 16);\n  };\n\n  const handleSubmit = function(e: FormEvent) {\n    const val = inputValue.trim();\n\n    stateService?.setEditing('');\n\n    if (val) {\n      setInputValue(val);\n      todoService?.save(todo, val);\n    } else {\n      todoService?.destroy(todo);\n    }\n  };\n\n  const handleKeydown = function(e: KeyboardEvent) {\n    if (e.keyCode === 27) {\n      setInputValue(todo.title);\n    } else if (e.keyCode === 13) {\n      handleSubmit(e);\n    }\n  };\n\n  return (\n    <li\n      className={classNames({\n        completed: todo.completed,\n        editing: stateService?.editing === todo.id\n      })}\n    >\n      <div className=\"view\">\n        <input\n          type=\"checkbox\"\n          className=\"toggle\"\n          checked={todo.completed}\n          onChange={() => todoService?.toggle(todo)}\n        />\n        <label onDoubleClick={() => handleEdit()}>{todo.title}</label>\n        <button\n          className=\"destroy\"\n          onClick={() => todoService?.destroy(todo)}\n        ></button>\n      </div>\n      <input\n        ref={inputRef}\n        className=\"edit\"\n        value={inputValue}\n        onBlur={(e) => handleSubmit(e)}\n        onChange={(e) => setInputValue(e.target.value)}\n        onKeyDown={(e) => handleKeydown(e)}\n      />\n    </li>\n  );\n}\n","import classNames from 'classnames';\nimport React from 'react';\n\nimport { useDependency } from 'lib/react/hooks';\n\nimport { SHOWING, StateService } from './services/state';\nimport { TodoService } from './services/todo';\nimport { pluralize } from './utils/pluralize';\n\nexport function Footer() {\n  const todoService = useDependency(TodoService)!;\n  const stateService = useDependency(StateService)!;\n\n  return (\n    <footer className=\"footer\">\n      <span className=\"todo-count\">\n        <strong>{todoService.activeTodoCount}</strong>{' '}\n        {pluralize(todoService.activeTodoCount, 'item')} left\n      </span>\n      <ul className=\"filters\">\n        <li>\n          <a\n            href=\"#/\"\n            className={classNames({\n              selected: stateService.nowShowing === SHOWING.ALL_TODOS\n            })}\n          >\n            All\n          </a>\n        </li>{' '}\n        <li>\n          <a\n            href=\"#/active\"\n            className={classNames({\n              selected: stateService.nowShowing === SHOWING.ACTIVE_TODOS\n            })}\n          >\n            Active\n          </a>\n        </li>{' '}\n        <li>\n          <a\n            href=\"#/completed\"\n            className={classNames({\n              selected: stateService.nowShowing === SHOWING.COMPLETED_TODOS\n            })}\n          >\n            Completed\n          </a>\n        </li>\n      </ul>\n      {todoService.completedCount > 0 ? (\n        <button\n          className=\"clear-completed\"\n          onClick={() => todoService.clearCompleted()}\n        >\n          Clear completed\n        </button>\n      ) : null}\n    </footer>\n  );\n}\n","export function pluralize(count: number, word: string): string {\n  return count === 1 ? word : word + 's';\n}\n","\nvar content = require(\"!!../../node_modules/css-loader/dist/cjs.js!./App.css\");\n\nif(typeof content === 'string') content = [[module.id, content, '']];\n\nvar transform;\nvar insertInto;\n\n\n\nvar options = {\"hmr\":true}\n\noptions.transform = transform\noptions.insertInto = undefined;\n\nvar update = require(\"!../../node_modules/style-loader/lib/addStyles.js\")(content, options);\n\nif(content.locals) module.exports = content.locals;\n\nif(module.hot) {\n\tmodule.hot.accept(\"!!../../node_modules/css-loader/dist/cjs.js!./App.css\", function() {\n\t\tvar newContent = require(\"!!../../node_modules/css-loader/dist/cjs.js!./App.css\");\n\n\t\tif(typeof newContent === 'string') newContent = [[module.id, newContent, '']];\n\n\t\tvar locals = (function(a, b) {\n\t\t\tvar key, idx = 0;\n\n\t\t\tfor(key in a) {\n\t\t\t\tif(!b || a[key] !== b[key]) return false;\n\t\t\t\tidx++;\n\t\t\t}\n\n\t\t\tfor(key in b) idx--;\n\n\t\t\treturn idx === 0;\n\t\t}(content.locals, newContent.locals));\n\n\t\tif(!locals) throw new Error('Aborting CSS HMR due to changed css-modules locals.');\n\n\t\tupdate(newContent);\n\t});\n\n\tmodule.hot.dispose(function() { update(); });\n}","exports = module.exports = require(\"../../node_modules/css-loader/dist/runtime/api.js\")(false);\n// Module\nexports.push([module.id, \"html,\\nbody {\\n  margin: 0;\\n  padding: 0;\\n}\\n\\nbutton {\\n  margin: 0;\\n  padding: 0;\\n  border: 0;\\n  background: none;\\n  font-size: 100%;\\n  vertical-align: baseline;\\n  font-family: inherit;\\n  font-weight: inherit;\\n  color: inherit;\\n  -webkit-appearance: none;\\n  appearance: none;\\n  -webkit-font-smoothing: antialiased;\\n  -moz-osx-font-smoothing: grayscale;\\n}\\n\\nbody {\\n  font: 14px 'Helvetica Neue', Helvetica, Arial, sans-serif;\\n  line-height: 1.4em;\\n  background: #f5f5f5;\\n  color: #4d4d4d;\\n  min-width: 230px;\\n  max-width: 550px;\\n  margin: 0 auto;\\n  -webkit-font-smoothing: antialiased;\\n  -moz-osx-font-smoothing: grayscale;\\n  font-weight: 300;\\n}\\n\\n:focus {\\n  outline: 0;\\n}\\n\\n.hidden {\\n  display: none;\\n}\\n\\n.todoapp {\\n  background: #fff;\\n  margin: 130px 0 40px 0;\\n  position: relative;\\n  box-shadow: 0 2px 4px 0 rgba(0, 0, 0, 0.2), 0 25px 50px 0 rgba(0, 0, 0, 0.1);\\n}\\n\\n.todoapp input::-webkit-input-placeholder {\\n  font-style: italic;\\n  font-weight: 300;\\n  color: #e6e6e6;\\n}\\n\\n.todoapp input::-moz-placeholder {\\n  font-style: italic;\\n  font-weight: 300;\\n  color: #e6e6e6;\\n}\\n\\n.todoapp input::input-placeholder {\\n  font-style: italic;\\n  font-weight: 300;\\n  color: #e6e6e6;\\n}\\n\\n.todoapp h1 {\\n  position: absolute;\\n  top: -155px;\\n  width: 100%;\\n  font-size: 100px;\\n  font-weight: 100;\\n  text-align: center;\\n  color: rgba(175, 47, 47, 0.15);\\n  -webkit-text-rendering: optimizeLegibility;\\n  -moz-text-rendering: optimizeLegibility;\\n  text-rendering: optimizeLegibility;\\n}\\n\\n.new-todo,\\n.edit {\\n  position: relative;\\n  margin: 0;\\n  width: 100%;\\n  font-size: 24px;\\n  font-family: inherit;\\n  font-weight: inherit;\\n  line-height: 1.4em;\\n  border: 0;\\n  color: inherit;\\n  padding: 6px;\\n  border: 1px solid #999;\\n  box-shadow: inset 0 -1px 5px 0 rgba(0, 0, 0, 0.2);\\n  box-sizing: border-box;\\n  -webkit-font-smoothing: antialiased;\\n  -moz-osx-font-smoothing: grayscale;\\n}\\n\\n.new-todo {\\n  padding: 16px 16px 16px 60px;\\n  border: none;\\n  background: rgba(0, 0, 0, 0.003);\\n  box-shadow: inset 0 -2px 1px rgba(0, 0, 0, 0.03);\\n}\\n\\n.main {\\n  position: relative;\\n  z-index: 2;\\n  border-top: 1px solid #e6e6e6;\\n}\\n\\n.toggle-all {\\n  text-align: center;\\n  border: none; /* Mobile Safari */\\n  opacity: 0;\\n  position: absolute;\\n}\\n\\n.toggle-all + label {\\n  width: 60px;\\n  height: 34px;\\n  font-size: 0;\\n  position: absolute;\\n  top: 14px;\\n  left: -13px;\\n  -webkit-transform: rotate(90deg);\\n  transform: rotate(90deg);\\n}\\n\\n.toggle-all + label:before {\\n  content: '❯';\\n  font-size: 22px;\\n  color: #e6e6e6;\\n  padding: 10px 27px 10px 27px;\\n}\\n\\n.toggle-all:checked + label:before {\\n  color: #737373;\\n}\\n\\n.todo-list {\\n  margin: 0;\\n  padding: 0;\\n  list-style: none;\\n}\\n\\n.todo-list li {\\n  position: relative;\\n  font-size: 24px;\\n  border-bottom: 1px solid #ededed;\\n}\\n\\n.todo-list li:last-child {\\n  border-bottom: none;\\n}\\n\\n.todo-list li.editing {\\n  border-bottom: none;\\n  padding: 0;\\n}\\n\\n.todo-list li.editing .edit {\\n  display: block;\\n  width: 506px;\\n  padding: 12px 16px;\\n  margin: 0 0 0 43px;\\n}\\n\\n.todo-list li.editing .view {\\n  display: none;\\n}\\n\\n.todo-list li .toggle {\\n  text-align: center;\\n  width: 40px;\\n  /* auto, since non-WebKit browsers doesn't support input styling */\\n  height: auto;\\n  position: absolute;\\n  top: 0;\\n  bottom: 0;\\n  margin: auto 0;\\n  border: none; /* Mobile Safari */\\n  -webkit-appearance: none;\\n  appearance: none;\\n}\\n\\n.todo-list li .toggle {\\n  opacity: 0;\\n}\\n\\n.todo-list li .toggle + label {\\n  /*\\n\\t\\tFirefox requires `#` to be escaped - https://bugzilla.mozilla.org/show_bug.cgi?id=922433\\n\\t\\tIE and Edge requires *everything* to be escaped to render, so we do that instead of just the `#` - https://developer.microsoft.com/en-us/microsoft-edge/platform/issues/7157459/\\n\\t*/\\n  background-image: url('data:image/svg+xml;utf8,%3Csvg%20xmlns%3D%22http%3A//www.w3.org/2000/svg%22%20width%3D%2240%22%20height%3D%2240%22%20viewBox%3D%22-10%20-18%20100%20135%22%3E%3Ccircle%20cx%3D%2250%22%20cy%3D%2250%22%20r%3D%2250%22%20fill%3D%22none%22%20stroke%3D%22%23ededed%22%20stroke-width%3D%223%22/%3E%3C/svg%3E');\\n  background-repeat: no-repeat;\\n  background-position: center left;\\n}\\n\\n.todo-list li .toggle:checked + label {\\n  background-image: url('data:image/svg+xml;utf8,%3Csvg%20xmlns%3D%22http%3A//www.w3.org/2000/svg%22%20width%3D%2240%22%20height%3D%2240%22%20viewBox%3D%22-10%20-18%20100%20135%22%3E%3Ccircle%20cx%3D%2250%22%20cy%3D%2250%22%20r%3D%2250%22%20fill%3D%22none%22%20stroke%3D%22%23bddad5%22%20stroke-width%3D%223%22/%3E%3Cpath%20fill%3D%22%235dc2af%22%20d%3D%22M72%2025L42%2071%2027%2056l-4%204%2020%2020%2034-52z%22/%3E%3C/svg%3E');\\n}\\n\\n.todo-list li label {\\n  word-break: break-all;\\n  padding: 15px 15px 15px 60px;\\n  display: block;\\n  line-height: 1.2;\\n  transition: color 0.4s;\\n}\\n\\n.todo-list li.completed label {\\n  color: #d9d9d9;\\n  text-decoration: line-through;\\n}\\n\\n.todo-list li .destroy {\\n  display: none;\\n  position: absolute;\\n  top: 0;\\n  right: 10px;\\n  bottom: 0;\\n  width: 40px;\\n  height: 40px;\\n  margin: auto 0;\\n  font-size: 30px;\\n  color: #cc9a9a;\\n  margin-bottom: 11px;\\n  transition: color 0.2s ease-out;\\n}\\n\\n.todo-list li .destroy:hover {\\n  color: #af5b5e;\\n}\\n\\n.todo-list li .destroy:after {\\n  content: '×';\\n}\\n\\n.todo-list li:hover .destroy {\\n  display: block;\\n}\\n\\n.todo-list li .edit {\\n  display: none;\\n}\\n\\n.todo-list li.editing:last-child {\\n  margin-bottom: -1px;\\n}\\n\\n.footer {\\n  color: #777;\\n  padding: 10px 15px;\\n  height: 20px;\\n  text-align: center;\\n  border-top: 1px solid #e6e6e6;\\n}\\n\\n.footer:before {\\n  content: '';\\n  position: absolute;\\n  right: 0;\\n  bottom: 0;\\n  left: 0;\\n  height: 50px;\\n  overflow: hidden;\\n  box-shadow: 0 1px 1px rgba(0, 0, 0, 0.2), 0 8px 0 -3px #f6f6f6,\\n    0 9px 1px -3px rgba(0, 0, 0, 0.2), 0 16px 0 -6px #f6f6f6,\\n    0 17px 2px -6px rgba(0, 0, 0, 0.2);\\n}\\n\\n.todo-count {\\n  float: left;\\n  text-align: left;\\n}\\n\\n.todo-count strong {\\n  font-weight: 300;\\n}\\n\\n.filters {\\n  margin: 0;\\n  padding: 0;\\n  list-style: none;\\n  position: absolute;\\n  right: 0;\\n  left: 0;\\n}\\n\\n.filters li {\\n  display: inline;\\n}\\n\\n.filters li a {\\n  color: inherit;\\n  margin: 3px;\\n  padding: 3px 7px;\\n  text-decoration: none;\\n  border: 1px solid transparent;\\n  border-radius: 3px;\\n}\\n\\n.filters li a:hover {\\n  border-color: rgba(175, 47, 47, 0.1);\\n}\\n\\n.filters li a.selected {\\n  border-color: rgba(175, 47, 47, 0.2);\\n}\\n\\n.clear-completed,\\nhtml .clear-completed:active {\\n  float: right;\\n  position: relative;\\n  line-height: 20px;\\n  text-decoration: none;\\n  cursor: pointer;\\n}\\n\\n.clear-completed:hover {\\n  text-decoration: underline;\\n}\\n\\n.info {\\n  margin: 65px auto 0;\\n  color: #bfbfbf;\\n  font-size: 10px;\\n  text-shadow: 0 1px 0 rgba(255, 255, 255, 0.5);\\n  text-align: center;\\n}\\n\\n.info p {\\n  line-height: 1;\\n}\\n\\n.info a {\\n  color: inherit;\\n  text-decoration: none;\\n  font-weight: 400;\\n}\\n\\n.info a:hover {\\n  text-decoration: underline;\\n}\\n\\n/*\\n\\tHack to remove background from Mobile Safari.\\n\\tCan't use it globally since it destroys checkboxes in Firefox\\n*/\\n@media screen and (-webkit-min-device-pixel-ratio: 0) {\\n  .toggle-all,\\n  .todo-list li .toggle {\\n    background: none;\\n  }\\n\\n  .todo-list li .toggle {\\n    height: 40px;\\n  }\\n}\\n\\n@media (max-width: 430px) {\\n  .footer {\\n    height: 50px;\\n  }\\n\\n  .filters {\\n    bottom: 10px;\\n  }\\n}\\n\", \"\"]);\n\n","import { IStoreService } from './store';\n\nexport class LocalStoreService implements IStoreService {\n  store(namespace: string): any;\n  store(namespace: string, data: any): void;\n  store(namespace: string, data?: any): void | any {\n    if (data) {\n      return localStorage.setItem(namespace, JSON.stringify(data));\n    } else {\n      const store = localStorage.getItem(namespace);\n      return (store && JSON.parse(store)) || [];\n    }\n  }\n}\n","import { registerSingleton } from 'lib/singleton';\nimport React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport { App } from './App';\n\nimport { IStoreService } from './services/store/store';\nimport { LocalStoreService } from './services/store/store.web';\n\nregisterSingleton(IStoreService, LocalStoreService);\n\nReactDOM.render(<App />, document.getElementsByClassName('todoapp')[0]);\n"],"sourceRoot":""}